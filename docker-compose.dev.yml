services:
    api-database:
        container_name: api-database
        image: postgres:17-alpine
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "henshi", "-U", "postgres" ]
            timeout: 45s
            interval: 3s
            retries: 10
        environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            TZ: UTC
            PGTZ: UTC
        ports:
            - '5432:5432'
        volumes:
            - api-database-data:/var/lib/postgresql/data


    api:
        build:
            context: ../henshi-api
            dockerfile: Dockerfile
        restart: unless-stopped
        environment:
            ConnectionStrings__FlashcardsConnectionString: ${DATABASE_CONNECTION_STRING}
            AUTH0_AUTHORITY: ${AUTH0_AUTHORITY}
            AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
            Cors__Origins: ${WEB_URL}
        depends_on:
            api-database:
                condition: service_healthy
        ports:
            - "5059:80"

    web:
        build:
            context: ../henshi-web
            dockerfile: Dockerfile
        restart: unless-stopped
        environment:
            VITE_AUTH0_DOMAIN: ${AUTH0_AUTHORITY}
            VITE_AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
            VITE_AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
            VITE_API_URL: ${API_URL}
        ports:
            - "3000:80"

volumes:
    api-database-data:
